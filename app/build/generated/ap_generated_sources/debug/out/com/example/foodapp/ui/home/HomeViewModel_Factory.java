// Generated by Dagger (https://dagger.dev).
package com.example.foodapp.ui.home;

import com.example.foodapp.respository.CategoryRepository;
import com.example.foodapp.respository.MealRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<MealRepository> mealRepositoryProvider;

  private final Provider<CategoryRepository> categoryRepositoryProvider;

  public HomeViewModel_Factory(Provider<MealRepository> mealRepositoryProvider,
      Provider<CategoryRepository> categoryRepositoryProvider) {
    this.mealRepositoryProvider = mealRepositoryProvider;
    this.categoryRepositoryProvider = categoryRepositoryProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(mealRepositoryProvider.get(), categoryRepositoryProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<MealRepository> mealRepositoryProvider,
      Provider<CategoryRepository> categoryRepositoryProvider) {
    return new HomeViewModel_Factory(mealRepositoryProvider, categoryRepositoryProvider);
  }

  public static HomeViewModel newInstance(MealRepository mealRepository,
      CategoryRepository categoryRepository) {
    return new HomeViewModel(mealRepository, categoryRepository);
  }
}
